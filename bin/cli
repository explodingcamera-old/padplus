#!/usr/bin/env node

const program = require('commander');
const updateNotifier = require('update-notifier');
const os = require('os');
const fs = require('fs-extra');
const path = require('path');
const colors = require('colors');
const eol = os.EOL;
const pkg = require('../package.json');
const configPath = process.cwd() + '/padplus.config.json';

const version = pkg.version;

updateNotifier({ pkg }).notify();

program
	.usage('<command> [options]')
  .version(version);

program.on('--help', function () {
  console.log('  To get additionaly help + options for a command, do');
  console.log();
  console.log('    $ padplus <command> --help');
  console.log('');
});

program
  .command('setup')
	.usage('[options]')
	.option('-T --type <type>', 'Type of installation (full|medium|lite)', /^(full|medium|lite)$/i)
  .action(require('../src/setup.js'))
	.on('--help', function () {
  console.log('  Examples:');
  console.log();
  console.log('    $ padplus setup light');
  console.log('    $ padplus setup');
  console.log();
	});

program
	.command('install [plugins...]')
  .action(require('../src/install.js'))
	.on('--help', function () {
  console.log('  Examples:');
  console.log();
  console.log('    $ padplus install //installs all plugins from padplus.config.json');
  console.log('    $ padplus install contrib-');
  console.log();
	});

program.parse(process.argv);

if (!program.args.length) {
  program.outputHelp(colors.cyan);
}
